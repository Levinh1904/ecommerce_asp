@using eShopSolution.ViewModels.Common;
@model PagedResult<eShopSolution.ViewModels.Catalog.Blogs.BlogViewModel>
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@{ ViewData["Title"] = "Danh sách Blog";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

@section Scripts{
    <script>setTimeout(function () {
            $('#msgAlert').fadeOut('slow');
        }, 2000);</script>
}
<div class="container-fluid">
    <h1 class="mt-4">Danh sách Blog</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a style="color: #0779e4;" href="/">Trang chủ</a></li>
        <li class="breadcrumb-item active">Danh sách Blog</li>
    </ol>
    <div class="card mb-12">
        <div class="card-header">
            <div class="row">
                <div class="col-md-7 col-xs-12">
                    <a class="btn btn-success" asp-action="Create" asp-controller="Blog">Tạo mới</a>
                </div>
                <div class="col-md-5 col-xs-12">
                    <form asp-action="Index" asp-controller="Blog" method="get">
                        <div class="row">
                            <div class="col-md-5">
                                @*name: là tên tham số*@
                                <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                            </div>
                            <div class="col-md-3">
                                <button type="submit" class="btn btn-info"><i class="fa fa-search" aria-hidden="true"></i></button>
                                <button type="button" onclick="window.location.href='/Blog/Index'" class="btn btn-secondary">Đặt lại</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="card-body">
            @if (TempData["CreateBlogSuccessful"] != null)
            {
<script>Swal.fire({
        position: 'top-end',
        icon: 'success',
        title: 'Thêm sản phẩm thành công',
        showConfirmButton: false,
        timer: 1500
    })</script>
 }
else if (TempData["UpdateBlogSuccessful"] != null)
{
<script>Swal.fire({
        position: 'top-end',
        icon: 'success',
        title: 'Cập nhật sản phẩm thành công',
        showConfirmButton: false,
        timer: 1500
    })</script>
 }
else if (TempData["DeleteBlogSuccessful"] != null)
{
<script>Swal.fire({
        position: 'top-end',
        icon: 'success',
        title: 'Xóa sản phẩm thành công',
        showConfirmButton: false,
        timer: 1500
    })</script>
   }
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="text-center">
                                STT
                            </th>
                            <th class="text-center">
                                Ảnh đại diện
                            </th>
                            <th>
                                Tên
                            </th>
                            <th class="text-center">
                                Tille
                            </th>
                            <th class="text-center">
                                Trạng Thái
                            </th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model.Items)
                        {
            <tr>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td class="text-center">
                    <img style="width:100px;height:100px" src="@(Configuration["BaseAddress"] + item.Image)" alt="Alternate Text" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tille)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td class="text-center">
                    <button class="btn btn-primary">@Html.ActionLink("Xem chi tiết", "Details", new { id = item.Id })</button>
                    <button class="btn btn-success">@Html.ActionLink("Cập nhật", "Edit", new { id = item.Id })</button>
                    <button class="btn btn-danger">@Html.ActionLink("Xóa", "Delete", new { id = item.Id })</button>
                </td>
            </tr>
}
                    </tbody>
                </table>
            </div>
            @*truyền Model vào hàm InvokeAsync của class PagerViewComponent để phân trang *@
            <div>

                @await Component.InvokeAsync("Pager", Model)

            </div>
        </div>
    </div>
</div>